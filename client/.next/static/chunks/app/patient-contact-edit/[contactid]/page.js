/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/patient-contact-edit/[contactid]/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkuldeepoffice%2FDocuments%2FGHL%20(Next.js)%2Fauto-patient%2Fclient%2Fsrc%2Fapp%2Fpatient-contact-edit%2F%5Bcontactid%5D%2Fpage.js&server=false!":
/*!*************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkuldeepoffice%2FDocuments%2FGHL%20(Next.js)%2Fauto-patient%2Fclient%2Fsrc%2Fapp%2Fpatient-contact-edit%2F%5Bcontactid%5D%2Fpage.js&server=false! ***!
  \*************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/patient-contact-edit/[contactid]/page.js */ \"(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.js\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmt1bGRlZXBvZmZpY2UlMkZEb2N1bWVudHMlMkZHSEwlMjAoTmV4dC5qcyklMkZhdXRvLXBhdGllbnQlMkZjbGllbnQlMkZzcmMlMkZhcHAlMkZwYXRpZW50LWNvbnRhY3QtZWRpdCUyRiU1QmNvbnRhY3RpZCU1RCUyRnBhZ2UuanMmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzMxY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva3VsZGVlcG9mZmljZS9Eb2N1bWVudHMvR0hMIChOZXh0LmpzKS9hdXRvLXBhdGllbnQvY2xpZW50L3NyYy9hcHAvcGF0aWVudC1jb250YWN0LWVkaXQvW2NvbnRhY3RpZF0vcGFnZS5qc1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkuldeepoffice%2FDocuments%2FGHL%20(Next.js)%2Fauto-patient%2Fclient%2Fsrc%2Fapp%2Fpatient-contact-edit%2F%5Bcontactid%5D%2Fpage.js&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.module.css":
/*!******************************************************************!*\
  !*** ./src/app/patient-contact-edit/[contactid]/page.module.css ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"page_li__zO7O0\",\"label\":\"page_label__L8Cfv\",\"ul\":\"page_ul__kMkza\"};\n    if(true) {\n      // 1701422242142\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  \nmodule.exports.__checksum = \"00167942b0a5\"\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcGF0aWVudC1jb250YWN0LWVkaXQvW2NvbnRhY3RpZF0vcGFnZS5tb2R1bGUuY3NzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0JBQWtCO0FBQ2xCLE9BQU8sSUFBVTtBQUNqQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLHdNQUFzSixjQUFjLHNEQUFzRDtBQUN4UCxNQUFNLFVBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvcGF0aWVudC1jb250YWN0LWVkaXQvW2NvbnRhY3RpZF0vcGFnZS5tb2R1bGUuY3NzP2ZjZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcImxpXCI6XCJwYWdlX2xpX196TzdPMFwiLFwibGFiZWxcIjpcInBhZ2VfbGFiZWxfX0w4Q2Z2XCIsXCJ1bFwiOlwicGFnZV91bF9fa01remFcIn07XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTcwMTQyMjI0MjE0MlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMva3VsZGVlcG9mZmljZS9Eb2N1bWVudHMvR0hMIChOZXh0LmpzKS9hdXRvLXBhdGllbnQvY2xpZW50L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wicHVibGljUGF0aFwiOlwiL19uZXh0L1wiLFwiZXNNb2R1bGVcIjpmYWxzZSxcImxvY2Fsc1wiOnRydWV9KTtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShjc3NSZWxvYWQpO1xuICAgICAgXG4gICAgfVxuICBcbm1vZHVsZS5leHBvcnRzLl9fY2hlY2tzdW0gPSBcIjAwMTY3OTQyYjBhNVwiXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.module.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.js":
/*!**********************************************************!*\
  !*** ./src/app/patient-contact-edit/[contactid]/page.js ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Page; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./page.module.css */ \"(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.module.css\");\n/* harmony import */ var _page_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_page_module_css__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n// import { FormEvent,useState } from 'react'\n\n\nfunction Page(param) {\n    let { params: { contactid } } = param;\n    _s();\n    const api_url = \"http://localhost:3001\";\n    const client_id = \"656833bb18e41b56516d261a-lpkurjqq\";\n    const client_secret = \"3e89da6d-5547-457a-86a2-1ad98e42f270\";\n    const user_type = \"Location\";\n    const redirect_uri = \"http://localhost:3000/gohighlevel/oauth\";\n    const contactId = contactid;\n    const [ghlAccessToken, setGhlAccessToken] = react__WEBPACK_IMPORTED_MODULE_1__.useState(null);\n    const [name, setName] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\"\");\n    const [hnoAnamnese, setHnoAnamnese] = react__WEBPACK_IMPORTED_MODULE_1__.useState([]);\n    const [hnoAnamneseAllergies, setHnoAnamneseAllergies] = react__WEBPACK_IMPORTED_MODULE_1__.useState([]);\n    const [hnoAnamneseChronischeRhinitis, setHnoAnamneseChronischeRhinitis] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\"\");\n    const [hnoAnamneseNasenAbususSeit, setHnoAnamneseNasenAbususSeit] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\"\");\n    const [hnoAnamneseLippenKieferGaumenspalte, setHnoAnamneseLippenKieferGaumenspalte] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\"\");\n    const [hnoAnamneseSonstiges, setHnoAnamneseSonstiges] = react__WEBPACK_IMPORTED_MODULE_1__.useState(\"\");\n    const [isLoaded, setIsLoaded] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        setIsLoaded(true);\n        if (ghlAccessToken == null && isLoaded == true) {\n            var res = fetch(api_url + \"/token/get\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }).then(function(response) {\n                return response.json();\n            }).then(function(data) {\n                data = JSON.parse(data.token);\n                // console.log(data)\n                setGhlAccessToken(data);\n                getGHLContact(data.access_token);\n            });\n        }\n    }, [\n        ghlAccessToken,\n        isLoaded\n    ]);\n    var getGHLContact = async (access_token)=>{\n        var myHeaders = new Headers();\n        myHeaders.append(\"Accept\", \"application/json\");\n        myHeaders.append(\"Version\", \"2021-07-28\");\n        myHeaders.append(\"Authorization\", \"Bearer \".concat(access_token));\n        var requestOptions = {\n            method: \"GET\",\n            headers: myHeaders,\n            redirect: \"follow\"\n        };\n        fetch(\"https://services.leadconnectorhq.com/contacts/\".concat(contactId), requestOptions).then((response)=>response.text()).then((result)=>{\n            result = JSON.parse(result);\n            if (result.hasOwnProperty(\"error\")) {\n                alert(result.error);\n                return false;\n            }\n            // console.log(result.contact.customFields)\n            result.contact.customFields.map((customField)=>{\n                if (customField.id == \"obB3fTlgTd5ZOm6r2Vqh\") {\n                    var opt = [];\n                    customField.value.map((value)=>{\n                        document.getElementsByName(\"hnoanamnese\").forEach((hnoanamnese)=>{\n                            if (hnoanamnese.value == value) {\n                                opt.push(value);\n                                hnoanamnese.checked = true;\n                            }\n                        });\n                    });\n                    setHnoAnamnese(opt);\n                } else if (customField.id == \"TrE0VWKuPNnrn67QbYij\") {\n                    var opt = [];\n                    customField.value.map((value)=>{\n                        document.getElementsByName(\"hnoanamese_allergie\").forEach((hnoanamese_allergie)=>{\n                            if (hnoanamese_allergie.value == value) {\n                                opt.push(value);\n                                hnoanamese_allergie.checked = true;\n                            }\n                        });\n                    });\n                    setHnoAnamneseAllergies(opt);\n                } else if (customField.id == \"NhiAyYb5NkMxHwgFqfa9\") {\n                    document.getElementsByName(\"chronische_rhinitis_options\").forEach((chronische_rhinitis_options)=>{\n                        if (chronische_rhinitis_options.value == customField.value) {\n                            chronische_rhinitis_options.checked = true;\n                        }\n                    });\n                    setHnoAnamneseChronischeRhinitis(customField.value);\n                } else if (customField.id == \"rDP1C479njAjf63wClM9\") {\n                    document.getElementsByName(\"lippen_kiefer_gaumenspalte_opt\").forEach((lippen_kiefer_gaumenspalte_opt)=>{\n                        if (lippen_kiefer_gaumenspalte_opt.value == customField.value) {\n                            lippen_kiefer_gaumenspalte_opt.checked = true;\n                        }\n                    });\n                    setHnoAnamneseLippenKieferGaumenspalte(customField.value);\n                } else if (customField.id == \"lBHzEjpKz56uyMZx4TPo\") {\n                    document.getElementsByName(\"hnoanamese_chron_nasensprayabusus_seit\").forEach((hnoanamese_chron_nasensprayabusus_seit)=>{\n                        hnoanamese_chron_nasensprayabusus_seit.value = customField.value;\n                    });\n                    setHnoAnamneseNasenAbususSeit(customField.value);\n                } else if (customField.id == \"Rh4FxpUb46ZNz34ODlNh\") {\n                    document.getElementsByName(\"hnoanamese_sonstiges\").forEach((hnoanamese_sonstiges)=>{\n                        hnoanamese_sonstiges.value = customField.value;\n                    });\n                    setHnoAnamneseSonstiges(customField.value);\n                }\n            });\n        }).catch((error)=>console.log(\"error\", error));\n    };\n    var contactName = (e)=>{\n        // console.log(e.target.value)\n        setName(e.target.value);\n    };\n    var contactHnoAnamnese = (e)=>{\n        var opt = hnoAnamnese;\n        if (e.target.checked) {\n            opt.push(e.target.value);\n            if (e.target.value == \"Chron. Nasenspray-Abusus seit\") {\n                document.getElementsByName(\"hnoanamese_chron_nasensprayabusus_seit\").forEach((hnoanamese_chron_nasensprayabusus_seit)=>{\n                    hnoanamese_chron_nasensprayabusus_seit.disabled = false;\n                });\n            } else if (e.target.value == \"Sonstiges\") {\n                document.getElementsByName(\"hnoanamese_sonstiges\").forEach((hnoanamese_sonstiges)=>{\n                    hnoanamese_sonstiges.disabled = false;\n                });\n            }\n            setHnoAnamnese(opt);\n        } else {\n            opt.splice(opt.indexOf(e.target.value), 1);\n            setHnoAnamnese(opt);\n            if (e.target.value == \"Allergy\") {\n                document.getElementsByName(\"hnoanamese_allergie\").forEach((hnoanamese_allergie)=>{\n                    hnoanamese_allergie.checked = false;\n                });\n                setHnoAnamneseAllergies([]);\n            } else if (e.target.value == \"Chronische Rhinitis\") {\n                document.getElementsByName(\"chronische_rhinitis_options\").forEach((chronische_rhinitis_options)=>{\n                    chronische_rhinitis_options.checked = false;\n                });\n                setHnoAnamneseChronischeRhinitis(\"\");\n            } else if (e.target.value == \"Chron. Nasenspray-Abusus seit\") {\n                document.getElementsByName(\"hnoanamese_chron_nasensprayabusus_seit\").forEach((hnoanamese_chron_nasensprayabusus_seit)=>{\n                    hnoanamese_chron_nasensprayabusus_seit.value = \"\";\n                    hnoanamese_chron_nasensprayabusus_seit.disabled = true;\n                });\n                setHnoAnamneseNasenAbususSeit(\"\");\n            } else if (e.target.value == \"Lippen-Kiefer-Gaumenspalte\") {\n                document.getElementsByName(\"lippen_kiefer_gaumenspalte_opt\").forEach((lippen_kiefer_gaumenspalte_opt)=>{\n                    lippen_kiefer_gaumenspalte_opt.checked = false;\n                });\n                setHnoAnamneseLippenKieferGaumenspalte(\"\");\n            } else if (e.target.value == \"Sonstiges\") {\n                document.getElementsByName(\"hnoanamese_sonstiges\").forEach((hnoanamese_sonstiges)=>{\n                    hnoanamese_sonstiges.value = \"\";\n                    hnoanamese_sonstiges.disabled = true;\n                });\n                setHnoAnamneseSonstiges(\"\");\n            }\n        }\n    };\n    var contactHnoAnamneseAllergies = (e)=>{\n        var opt = hnoAnamneseAllergies;\n        if (e.target.checked) {\n            opt.push(e.target.value);\n            setHnoAnamneseAllergies(opt);\n        } else {\n            opt.splice(opt.indexOf(e.target.value), 1);\n            setHnoAnamneseAllergies(opt);\n        }\n        if (hnoAnamnese.indexOf(\"Allergy\") == -1) {\n            alert(\"Please select Allergy box.\");\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    };\n    var contactHnoAnamneseChronischeRhinitis = (e)=>{\n        setHnoAnamneseChronischeRhinitis(e.target.value);\n        if (hnoAnamnese.indexOf(\"Chronische Rhinitis\") == -1) {\n            alert(\"Please select Chronische Rhinitis box.\");\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    };\n    var contactHnoAnamneseNasenAbususSeit = (e)=>{\n        setHnoAnamneseNasenAbususSeit(e.target.value);\n        if (hnoAnamnese.indexOf(\"Chron. Nasenspray-Abusus seit\") == -1) {\n            alert(\"Please select Chron. Nasenspray-Abusus seit box.\");\n            return false;\n        }\n    };\n    var contactHnoAnamneseLippenKieferGaumenspalte = (e)=>{\n        setHnoAnamneseLippenKieferGaumenspalte(e.target.value);\n        if (hnoAnamnese.indexOf(\"Lippen-Kiefer-Gaumenspalte\") == -1) {\n            alert(\"Please select Lippen Kiefer Gaumenspalte box.\");\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    };\n    var contactHnoAnamneseSonstiges = (e)=>{\n        setHnoAnamneseSonstiges(e.target.value);\n        if (hnoAnamnese.indexOf(\"Sonstiges\") == -1) {\n            alert(\"Please select Sonstiges box.\");\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    };\n    var makeid = (length)=>{\n        let result = \"\";\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        const charactersLength = characters.length;\n        let counter = 0;\n        while(counter < length){\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            counter += 1;\n        }\n        return result;\n    };\n    var refreshAccessToken = (refreshToken)=>{\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"client_id\", client_id);\n        urlencoded.append(\"client_secret\", client_secret);\n        urlencoded.append(\"grant_type\", \"refresh_token\");\n        urlencoded.append(\"refresh_token\", ghlAccessToken.refresh_token);\n        urlencoded.append(\"redirect_uri\", redirect_uri);\n        urlencoded.append(\"user_type\", user_type);\n        var requestOptions = {\n            method: \"POST\",\n            headers: myHeaders,\n            body: urlencoded,\n            redirect: \"follow\"\n        };\n        fetch(\"https://services.leadconnectorhq.com/oauth/token\", requestOptions).then((response)=>response.text()).then((result)=>{\n            // console.log(result)\n            result = JSON.parse(result);\n            if (result.hasOwnProperty(\"refresh_token\")) {\n                const res = fetch(api_url + \"/token/save\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        token: result\n                    }),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }).then(function(response) {\n                    return response.json();\n                }).then(function(data) {\n                    alert(data.response);\n                });\n            } else {\n                alert(\"\".concat(result.error, \"\\n\").concat(result.error_description));\n            }\n        }).catch((error)=>console.log(\"error\", error));\n    };\n    var onSubmit = async (event1)=>{\n        event1.preventDefault();\n        // var res = await fetch(api_url+\"/token/get\", {\n        //   method: \"GET\",\n        //   headers: {\n        //     \"Content-Type\": \"application/json\"\n        //   }\n        // }).then(function(response){\n        //   return response.json()\n        // }).then(function(data) {\n        //     data = JSON.parse(data.token)\n        if (ghlAccessToken.hasOwnProperty(\"access_token\")) {\n            updateGHLRequest(ghlAccessToken.access_token, ghlAccessToken.locationId);\n        }\n    // })\n    };\n    var updateGHLRequest = async (access_token, locationId)=>{\n        // console.log([\n        //           {\n        //             \"key\": \"hnoanamnese\",\n        //             \"field_value\": hnoAnamnese\n        //           },\n        //           {\n        //             \"key\": \"hnoanamese_allergie\",\n        //             \"field_value\": hnoAnamnese.indexOf('Allergy') != -1 ? hnoAnamneseAllergies : ''\n        //           },\n        //           {\n        //             \"id\": \"NhiAyYb5NkMxHwgFqfa9\",\n        //             \"field_value\": hnoAnamnese.indexOf('Chronische Rhinitis') != -1 ? hnoAnamneseChronischeRhinitis : ''\n        //           },\n        //           {\n        //             \"key\": \"hnoanamese_chron_nasensprayabusus_seit\",\n        //             \"field_value\": hnoAnamnese.indexOf('Chron. Nasenspray-Abusus seit') != -1 ? hnoAnamneseNasenAbususSeit : ''\n        //           },\n        //           {\n        //             \"id\": \"rDP1C479njAjf63wClM9\",\n        //             \"field_value\": hnoAnamnese.indexOf('Lippen-Kiefer-Gaumenspalte') != -1 ? hnoAnamneseLippenKieferGaumenspalte : ''\n        //           },\n        //           {\n        //             \"key\": \"hnoanamese_sonstiges\",\n        //             \"field_value\": hnoAnamnese.indexOf('Sonstiges') != -1 ? hnoAnamneseSonstiges : ''\n        //           }\n        //         ]);\n        // return false\n        var url = \"https://services.leadconnectorhq.com/contacts/\".concat(contactId);\n        var options = {\n            method: \"PUT\",\n            headers: {\n                Authorization: \"Bearer \".concat(access_token),\n                Version: \"2021-07-28\",\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n            },\n            body: JSON.stringify({\n                \"firstName\": name,\n                \"lastName\": name,\n                \"name\": name,\n                // \"email\": `${makeid(5)}@deos.com`,\n                // \"phone\": `+1 ${Math.floor(100000000 + Math.random() * 900000000)}`,\n                \"address1\": \"3535 1st St N\",\n                \"city\": \"Dolomite\",\n                \"state\": \"AL\",\n                \"postalCode\": \"35061\",\n                \"website\": \"https://www.tesla.com\",\n                \"timezone\": \"America/Chihuahua\",\n                \"dnd\": true,\n                \"dndSettings\": {\n                    \"Call\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    },\n                    \"Email\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    },\n                    \"SMS\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    },\n                    \"WhatsApp\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    },\n                    \"GMB\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    },\n                    \"FB\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\",\n                        \"code\": \"string\"\n                    }\n                },\n                \"inboundDndSettings\": {\n                    \"all\": {\n                        \"status\": \"active\",\n                        \"message\": \"string\"\n                    }\n                },\n                \"tags\": [\n                    \"nisi sint commodo amet\",\n                    \"consequat\"\n                ],\n                \"customFields\": [\n                    {\n                        \"key\": \"hnoanamnese\",\n                        \"field_value\": hnoAnamnese\n                    },\n                    {\n                        \"key\": \"hnoanamese_allergie\",\n                        \"field_value\": hnoAnamnese.indexOf(\"Allergy\") != -1 ? hnoAnamneseAllergies : \"\"\n                    },\n                    {\n                        \"id\": \"NhiAyYb5NkMxHwgFqfa9\",\n                        \"field_value\": hnoAnamnese.indexOf(\"Chronische Rhinitis\") != -1 ? hnoAnamneseChronischeRhinitis : \"\"\n                    },\n                    {\n                        \"key\": \"hnoanamese_chron_nasensprayabusus_seit\",\n                        \"field_value\": hnoAnamnese.indexOf(\"Chron. Nasenspray-Abusus seit\") != -1 ? hnoAnamneseNasenAbususSeit : \"\"\n                    },\n                    {\n                        \"id\": \"rDP1C479njAjf63wClM9\",\n                        \"field_value\": hnoAnamnese.indexOf(\"Lippen-Kiefer-Gaumenspalte\") != -1 ? hnoAnamneseLippenKieferGaumenspalte : \"\"\n                    },\n                    {\n                        \"key\": \"hnoanamese_sonstiges\",\n                        \"field_value\": hnoAnamnese.indexOf(\"Sonstiges\") != -1 ? hnoAnamneseSonstiges : \"\"\n                    }\n                ],\n                \"source\": \"public api\",\n                \"country\": \"US\",\n                \"companyName\": \"DGS VolMAX\"\n            })\n        };\n        try {\n            var response = await fetch(url, options);\n            var data = await response.json();\n            // console.log(data);\n            alert(\"New Contact ID: \".concat(data.contact.id, \" has been updated.\"));\n        } catch (error) {\n            alert(error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                children: [\n                    \"Customer Name\",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        name: \"name\",\n                        onKeyUp: contactName\n                    }, void 0, false, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 466,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 465,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {}, void 0, false, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 468,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"HNO-Anamnese\"\n            }, void 0, false, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 469,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\",\n                                        name: \"hnoanamnese\",\n                                        value: \"Allergy\",\n                                        onChange: contactHnoAnamnese\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 474,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"Allergy\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 473,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"checkbox\",\n                                                    name: \"hnoanamese_allergie\",\n                                                    value: \"Pollen\",\n                                                    onChange: contactHnoAnamneseAllergies\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 479,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Pollen\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 478,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 478,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"checkbox\",\n                                                    name: \"hnoanamese_allergie\",\n                                                    value: \"Gras\",\n                                                    onChange: contactHnoAnamneseAllergies\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 484,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Gras\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 483,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 483,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"checkbox\",\n                                                    name: \"hnoanamese_allergie\",\n                                                    value: \"Hausstaub\",\n                                                    onChange: contactHnoAnamneseAllergies\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 489,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Hausstaub\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 488,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 488,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"checkbox\",\n                                                    name: \"hnoanamese_allergie\",\n                                                    value: \"Milben\",\n                                                    onChange: contactHnoAnamneseAllergies\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 494,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Milben\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 493,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 493,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 477,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 472,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\",\n                                        name: \"hnoanamnese\",\n                                        value: \"Chronische Rhinitis\",\n                                        onChange: contactHnoAnamnese\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 504,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"Chronische Rhinitis\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 503,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"NhiAyYb5NkMxHwgFqfa9\",\n                                                    name: \"chronische_rhinitis_options\",\n                                                    value: \"Chronische Rhinorrhoe\",\n                                                    onChange: contactHnoAnamneseChronischeRhinitis\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 509,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Chronische Rhinorrhoe\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 508,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 508,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"NhiAyYb5NkMxHwgFqfa9\",\n                                                    name: \"chronische_rhinitis_options\",\n                                                    value: \"Pat. schnarcht nachts\",\n                                                    onChange: contactHnoAnamneseChronischeRhinitis\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 514,\n                                                    columnNumber: 19\n                                                }, this),\n                                                \"Pat. schnarcht nachts\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 513,\n                                            columnNumber: 39\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 513,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 507,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 500,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"checkbox\",\n                                    name: \"hnoanamnese\",\n                                    value: \"Chronische Nasenebenh\\xf6hlen Entz\\xfcndungen\",\n                                    onChange: contactHnoAnamnese\n                                }, void 0, false, {\n                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                    lineNumber: 524,\n                                    columnNumber: 13\n                                }, this),\n                                \"Chronische Nasenebenh\\xf6hlen Entz\\xfcndungen\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                            lineNumber: 523,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 522,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\",\n                                        name: \"hnoanamnese\",\n                                        value: \"Chron. Nasenspray-Abusus seit\",\n                                        onChange: contactHnoAnamnese\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 533,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"Chron. Nasenspray-Abusus seit\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 532,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                        children: [\n                                            \"HNO-ANAMESE_Chron. Nasenspray-Abusus Seit\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"text\",\n                                                \"data-id\": \"lBHzEjpKz56uyMZx4TPo\",\n                                                name: \"hnoanamese_chron_nasensprayabusus_seit\",\n                                                onKeyUp: contactHnoAnamneseNasenAbususSeit\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                lineNumber: 540,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 538,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                    lineNumber: 537,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 536,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 531,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\",\n                                        name: \"hnoanamnese\",\n                                        value: \"Lippen-Kiefer-Gaumenspalte\",\n                                        onChange: contactHnoAnamnese\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 549,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"Lippen Kiefer Gaumenspalte\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 548,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"rDP1C479njAjf63wClM9\",\n                                                    name: \"lippen_kiefer_gaumenspalte_opt\",\n                                                    value: \"Lippee\",\n                                                    onChange: contactHnoAnamneseLippenKieferGaumenspalte\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 555,\n                                                    columnNumber: 17\n                                                }, this),\n                                                \"Lippe\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 554,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 553,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"rDP1C479njAjf63wClM9\",\n                                                    name: \"lippen_kiefer_gaumenspalte_opt\",\n                                                    value: \"Kiefer\",\n                                                    onChange: contactHnoAnamneseLippenKieferGaumenspalte\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 561,\n                                                    columnNumber: 17\n                                                }, this),\n                                                \"Kiefer\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 560,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 559,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"rDP1C479njAjf63wClM9\",\n                                                    name: \"lippen_kiefer_gaumenspalte_opt\",\n                                                    value: \"harter Gaumen\",\n                                                    onChange: contactHnoAnamneseLippenKieferGaumenspalte\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 567,\n                                                    columnNumber: 17\n                                                }, this),\n                                                \"harter Gaumen\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 566,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 565,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                    type: \"radio\",\n                                                    \"data-id\": \"rDP1C479njAjf63wClM9\",\n                                                    name: \"lippen_kiefer_gaumenspalte_opt\",\n                                                    value: \"weicher Gaumen\",\n                                                    onChange: contactHnoAnamneseLippenKieferGaumenspalte\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                    lineNumber: 573,\n                                                    columnNumber: 17\n                                                }, this),\n                                                \"weicher Gaumen\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                            lineNumber: 572,\n                                            columnNumber: 15\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 571,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 552,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 547,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"checkbox\",\n                                        name: \"hnoanamnese\",\n                                        value: \"Sonstiges\",\n                                        onChange: contactHnoAnamnese\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 583,\n                                        columnNumber: 13\n                                    }, this),\n                                    \"Sonstiges\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 582,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().ul),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().li),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: (_page_module_css__WEBPACK_IMPORTED_MODULE_2___default().label),\n                                        children: [\n                                            \"HNO-ANAMESE_Sonstiges\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"text\",\n                                                name: \"hnoanamese_sonstiges\",\n                                                onKeyUp: contactHnoAnamneseSonstiges\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                                lineNumber: 590,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                        lineNumber: 588,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                    lineNumber: 587,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                                lineNumber: 586,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                        lineNumber: 581,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 471,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                type: \"submit\",\n                onClick: onSubmit,\n                children: \"Submit\"\n            }, void 0, false, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 599,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: refreshAccessToken,\n                children: \"Refresh Authorization\"\n            }, void 0, false, {\n                fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n                lineNumber: 600,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kuldeepoffice/Documents/GHL (Next.js)/auto-patient/client/src/app/patient-contact-edit/[contactid]/page.js\",\n        lineNumber: 464,\n        columnNumber: 5\n    }, this);\n}\n_s(Page, \"vklH6H+tPopZj9H248OmO/yf2l8=\");\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/patient-contact-edit/[contactid]/page.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={686:(e,r,t)=>{var n=t(808);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},808:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(686);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2htci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qcz83YTRkIl0sInNvdXJjZXNDb250ZW50IjpbIigoKT0+e1widXNlIHN0cmljdFwiO3ZhciBlPXs2ODY6KGUscix0KT0+e3ZhciBuPXQoODA4KTt2YXIgaT1PYmplY3QuY3JlYXRlKG51bGwpO3ZhciBhPXR5cGVvZiBkb2N1bWVudD09PVwidW5kZWZpbmVkXCI7dmFyIG89QXJyYXkucHJvdG90eXBlLmZvckVhY2g7ZnVuY3Rpb24gZGVib3VuY2UoZSxyKXt2YXIgdD0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7dmFyIGk9YXJndW1lbnRzO3ZhciBhPWZ1bmN0aW9uIGZ1bmN0aW9uQ2FsbCgpe3JldHVybiBlLmFwcGx5KG4saSl9O2NsZWFyVGltZW91dCh0KTt0PXNldFRpbWVvdXQoYSxyKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBnZXRDdXJyZW50U2NyaXB0VXJsKGUpe3ZhciByPWlbZV07aWYoIXIpe2lmKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpe3I9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9ZWxzZXt2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTt2YXIgYT10W3QubGVuZ3RoLTFdO2lmKGEpe3I9YS5zcmN9fWlbZV09cn1yZXR1cm4gZnVuY3Rpb24oZSl7aWYoIXIpe3JldHVybiBudWxsfXZhciB0PXIuc3BsaXQoLyhbXlxcXFwvXSspXFwuanMkLyk7dmFyIGk9dCYmdFsxXTtpZighaSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19aWYoIWUpe3JldHVybltyLnJlcGxhY2UoXCIuanNcIixcIi5jc3NcIildfXJldHVybiBlLnNwbGl0KFwiLFwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBSZWdFeHAoXCJcIi5jb25jYXQoaSxcIlxcXFwuanMkXCIpLFwiZ1wiKTtyZXR1cm4gbihyLnJlcGxhY2UodCxcIlwiLmNvbmNhdChlLnJlcGxhY2UoL3tmaWxlTmFtZX0vZyxpKSxcIi5jc3NcIikpKX0pKX19ZnVuY3Rpb24gdXBkYXRlQ3NzKGUscil7aWYoIXIpe2lmKCFlLmhyZWYpe3JldHVybn1yPWUuaHJlZi5zcGxpdChcIj9cIilbMF19aWYoIWlzVXJsUmVxdWVzdChyKSl7cmV0dXJufWlmKGUuaXNMb2FkZWQ9PT1mYWxzZSl7cmV0dXJufWlmKCFyfHwhKHIuaW5kZXhPZihcIi5jc3NcIik+LTEpKXtyZXR1cm59ZS52aXNpdGVkPXRydWU7dmFyIHQ9ZS5jbG9uZU5vZGUoKTt0LmlzTG9hZGVkPWZhbHNlO3QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoZnVuY3Rpb24oKXtpZih0LmlzTG9hZGVkKXtyZXR1cm59dC5pc0xvYWRlZD10cnVlO2UucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlKX0pKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJlcnJvclwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuaHJlZj1cIlwiLmNvbmNhdChyLFwiP1wiKS5jb25jYXQoRGF0ZS5ub3coKSk7aWYoZS5uZXh0U2libGluZyl7ZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0LGUubmV4dFNpYmxpbmcpfWVsc2V7ZS5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpfX1mdW5jdGlvbiBnZXRSZWxvYWRVcmwoZSxyKXt2YXIgdDtlPW4oZSx7c3RyaXBXV1c6ZmFsc2V9KTtyLnNvbWUoKGZ1bmN0aW9uKG4pe2lmKGUuaW5kZXhPZihyKT4tMSl7dD1ufX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRTdHlsZShlKXtpZighZSl7cmV0dXJuIGZhbHNlfXZhciByPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJsaW5rXCIpO3ZhciB0PWZhbHNlO28uY2FsbChyLChmdW5jdGlvbihyKXtpZighci5ocmVmKXtyZXR1cm59dmFyIG49Z2V0UmVsb2FkVXJsKHIuaHJlZixlKTtpZighaXNVcmxSZXF1ZXN0KG4pKXtyZXR1cm59aWYoci52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufWlmKG4pe3VwZGF0ZUNzcyhyLG4pO3Q9dHJ1ZX19KSk7cmV0dXJuIHR9ZnVuY3Rpb24gcmVsb2FkQWxsKCl7dmFyIGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7by5jYWxsKGUsKGZ1bmN0aW9uKGUpe2lmKGUudmlzaXRlZD09PXRydWUpe3JldHVybn11cGRhdGVDc3MoZSl9KSl9ZnVuY3Rpb24gaXNVcmxSZXF1ZXN0KGUpe2lmKCEvXlthLXpBLVpdW2EtekEtWlxcZCtcXC0uXSo6Ly50ZXN0KGUpKXtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYoYSl7Y29uc29sZS5sb2coXCJubyB3aW5kb3cuZG9jdW1lbnQgZm91bmQsIHdpbGwgbm90IEhNUiBDU1NcIik7cmV0dXJuIG5vb3B9dmFyIHQ9Z2V0Q3VycmVudFNjcmlwdFVybChlKTtmdW5jdGlvbiB1cGRhdGUoKXt2YXIgZT10KHIuZmlsZW5hbWUpO3ZhciBuPXJlbG9hZFN0eWxlKGUpO2lmKHIubG9jYWxzKXtjb25zb2xlLmxvZyhcIltITVJdIERldGVjdGVkIGxvY2FsIGNzcyBtb2R1bGVzLiBSZWxvYWQgYWxsIGNzc1wiKTtyZWxvYWRBbGwoKTtyZXR1cm59aWYobil7Y29uc29sZS5sb2coXCJbSE1SXSBjc3MgcmVsb2FkICVzXCIsZS5qb2luKFwiIFwiKSl9ZWxzZXtjb25zb2xlLmxvZyhcIltITVJdIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpfX1yZXR1cm4gZGVib3VuY2UodXBkYXRlLDUwKX19LDgwODplPT57ZnVuY3Rpb24gbm9ybWFsaXplVXJsKGUpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSxyKXtzd2l0Y2gocil7Y2FzZVwiLi5cIjplLnBvcCgpO2JyZWFrO2Nhc2VcIi5cIjpicmVhaztkZWZhdWx0OmUucHVzaChyKX1yZXR1cm4gZX0pLFtdKS5qb2luKFwiL1wiKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSl7ZT1lLnRyaW0oKTtpZigvXmRhdGE6L2kudGVzdChlKSl7cmV0dXJuIGV9dmFyIHI9ZS5pbmRleE9mKFwiLy9cIikhPT0tMT9lLnNwbGl0KFwiLy9cIilbMF0rXCIvL1wiOlwiXCI7dmFyIHQ9ZS5yZXBsYWNlKG5ldyBSZWdFeHAocixcImlcIiksXCJcIikuc3BsaXQoXCIvXCIpO3ZhciBuPXRbMF0udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXC4kLyxcIlwiKTt0WzBdPVwiXCI7dmFyIGk9bm9ybWFsaXplVXJsKHQpO3JldHVybiByK24raX19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHQpe3ZhciBuPXJbdF07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT1yW3RdPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW3RdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW3RdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciB0PV9fbmNjd3Bja19yZXF1aXJlX18oNjg2KTttb2R1bGUuZXhwb3J0cz10fSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/YzMzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkuldeepoffice%2FDocuments%2FGHL%20(Next.js)%2Fauto-patient%2Fclient%2Fsrc%2Fapp%2Fpatient-contact-edit%2F%5Bcontactid%5D%2Fpage.js&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);